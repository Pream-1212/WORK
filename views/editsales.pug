extends edit_layout

block content

  main.container

    h3 Edit sale form
    form#addSaleForm.mb-4(action=`/editsales/${item._id}`, method='post')
      .mb-2
        label(for="saleDate") Date:
        input#saleDate.form-control(type="date", name="date", value=`${item.date}`, required)
      .mb-2
        label(for="customer") Customer Name:
        input#customer.form-control(type="text", placeholder="Customer Name", name="name", value=`${item.name}`, required)
      .mb-2
        label.form-label Product Name
        select#productName.form-control(name='productName', required)
          option(value='') -- Select Product Name--
          option(value='Officefurniture') Officefurniture
          option(value='Softwood') Softwood
          option(value='Hardwood') Hardwood
          option(value='Cupboards') Cupboards
          option(value='Beds') Beds
          option(value='Cabinets') Cabinets
          option(value='Poles') Poles
          option(value='Woodchips') Woodchips
          option(value='Diningtables') Diningtables
          option(value='Wardrobes') Wardrobes
      .mb-3
        label.form-label Product Type
        select#productType.form-control(name='productType', required)
          option(value='Wood') Wood
          option(value='Furniture') Furniture
          if stocks && stocks.length
            each stock in stocks
              option(value=stock.productName)= stock.productName
      .mb-2
        label(for="quantity") Quantity:
        input#quantity.form-control(type="number", placeholder="Quantity", name="quantity", value=`${item.quantity}`, required)
      .mb-2
        label(for="unitprice") Unit Price: UGX
        input#unitPrice.form-control(type="text", placeholder="Unit price", name="unitPrice", value=`${item.unitPrice}`, required)
      .mb-2
        label.payment Payment Type:
        select.form-control#paymentType(name="payment", required)
          option(value='') -- Select Payment Type--
          option(value="cheque") Cheque
          option(value="cash") Cash
          option(value="bankoverdraft") Bank Overdraft
          option(value="banktransfer") Bank Transfer
          option(value="paypal") PayPal
      .mb-3
        label.form-label Transport Required?
        select#transportOption.form-control(name='transportOption', required)
          option(value='') -- Choose--
          option(value='no') No
          option(value='yes') Yes

        // Hidden fields to store computed values
        input#transportCharge(type='hidden', name='transportCharge')
        input#totalPrice(type='hidden', name='totalPrice')
      .mb-3
        label.form-label Delivery Time
        .form-check
          input.form-check-input#delivery1(type="radio", name="delivery", value="1-2 weeks", required)
          label.form-check-label(for="delivery1") 1-2 weeks delivery
        .form-check
          input.form-check-input#delivery2(type="radio", name="delivery", value="3-5 days")
          label.form-check-label(for="delivery2") 3-5 days delivery
        .form-check
          input.form-check-input#delivery3(type="radio", name="delivery", value="Same day")
          label.form-check-label(for="delivery3") Same day delivery
      button.btn.btn-success(type="submit") Update Sales

  // Scripts
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js")
  // Script to calculate transportCharge and totalPrice
  script.
    const quantityInput = document.getElementById('quantity');
    const unitPriceInput = document.getElementById('unitPrice');
    const transportOption = document.getElementById('transportOption');
    const transportInput = document.getElementById('transportCharge');
    const totalInput = document.getElementById('totalPrice');

    function calculateTotal() {
      const qty = parseFloat(quantityInput.value) || 0;
      const price = parseFloat(unitPriceInput.value) || 0;
      let total = qty * price;
      let transport = 0;

      if (transportOption.value === 'yes') {
        transport = total * 0.05;
        total += transport;
      }

      transportInput.value = transport;
      totalInput.value = total;
    }

    quantityInput.addEventListener('input', calculateTotal);
    unitPriceInput.addEventListener('input', calculateTotal);
    transportOption.addEventListener('change', calculateTotal);
